<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- css 이미지 파일 경로 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/img/**" location="/resources/img/" />
	<resources mapping="/imgs/**" location="/resources/imgs/" />
	<resources mapping="/css/**" location="/resources/css/" /> 
	<resources mapping="/js/**" location="/resources/js/" /> 
	
	<!-- /pages/** 이 경로에 접근하면 /WEB-INF/pages/ 위치로 보냄 --> 
	<resources mapping="/ifm/**" location="/WEB-INF/ifm/" /> 

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan	base-package="com.simcom.simapp" />
		
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000"></beans:property>
	</beans:bean>


	<!-- 마이바티스 설정 -->
	<!-- 오라클 접속정보 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:orcl"></beans:property>
		<beans:property name="username" value="TOM"></beans:property>
		<beans:property name="password" value="Tiger86$"></beans:property>
	</beans:bean>

	<!-- 데이터소스로 쿼리실행 (데이터소스, SQL) 
	sqlSessionFactory : bean = 객체 / mapperLocation: xml 쿼리(SQL) 위치 
	classpath:mappers/**/*Mapper.xml 
	mappers : 만든폴더 
	/**/ : 있어도 되고 없어도 되고 
	*Mapper.xml -> 끝은 Mapper.xml이어야 한다 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource">
		</beans:property>
		<beans:property name="mapperLocations" 
			value="classpath:mappers/**/*Mapper.xml"></beans:property>
	</beans:bean>

	<!-- SQL 접속관리 -->
	<beans:bean id="sqlSession"	class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory"	ref="sqlSessionFactory">
		</beans:constructor-arg>
	</beans:bean>

</beans:beans>
